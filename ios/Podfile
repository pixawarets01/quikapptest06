# ðŸš€ DYNAMICALLY GENERATED PODFILE - DO NOT EDIT MANUALLY
# Generated by lib/scripts/ios/generate_podfile.sh
# This file is automatically generated with environment-specific variables

# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# ðŸ”§ Pre-install hook for Firebase compatibility
pre_install do |installer|
  # Set up Firebase compatibility for all pods
  installer.pod_targets.each do |pod|
    if pod.name.start_with?('Firebase')
      # Set Swift version and other settings for Firebase pods
      pod.build_settings['SWIFT_VERSION'] = '5.0'
      pod.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
    end
    
    # Fix for GoogleDataTransport protobuf issue
    if pod.name == 'GoogleDataTransport'
      pod.build_settings['GCC_C_LANGUAGE_STANDARD'] = 'gnu99'
      pod.build_settings['CLANG_WARN_IMPLICIT_FUNCTION_DECLARATION'] = 'NO'
      pod.build_settings['OTHER_CFLAGS'] = '\ -Wno-implicit-function-declaration'
    end
    
    # Fix for nanopb
    if pod.name == 'nanopb'
      pod.build_settings['GCC_C_LANGUAGE_STANDARD'] = 'gnu99'
      pod.build_settings['CLANG_WARN_IMPLICIT_FUNCTION_DECLARATION'] = 'NO'
    end
  end
end

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  target 'RunnerTests' do
    inherit! :search_paths
  end

  # Enterprise Configuration
  post_install do |installer|
    installer.pods_project.targets.each do |target|
      flutter_additional_ios_build_settings(target)
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
        config.build_settings['CODE_SIGN_STYLE'] = 'Manual'
        config.build_settings['DEVELOPMENT_TEAM'] = 'ABC123DEF4'
        config.build_settings['PROVISIONING_PROFILE_SPECIFIER'] = 'Test Profile'
        config.build_settings['CODE_SIGN_IDENTITY'] = 'Apple Distribution'
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        config.build_settings['CODE_SIGNING_REQUIRED'] = 'NO'
        config.build_settings['ENABLE_TESTABILITY'] = 'YES'
        
        # ðŸ”§ Swift Compiler Fixes for Firebase
        config.build_settings['SWIFT_ACTIVE_COMPILATION_CONDITIONS'] = '\'
        config.build_settings['OTHER_SWIFT_FLAGS'] = '\ -enable-experimental-feature AccessLevelOnImport'
        
        # ðŸ”§ Additional Firebase Compatibility
        config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = '\ COCOAPODS=1'
        
        # ðŸ”§ GoogleDataTransport/Protobuf Fixes
        config.build_settings['GCC_C_LANGUAGE_STANDARD'] = 'gnu99'
        config.build_settings['CLANG_WARN_IMPLICIT_FUNCTION_DECLARATION'] = 'NO'
        config.build_settings['OTHER_CFLAGS'] = '\ -Wno-implicit-function-declaration'
        
        # ðŸ”§ Nanopb Integration
        config.build_settings['HEADER_SEARCH_PATHS'] = '\ \/nanopb'
        config.build_settings['LIBRARY_SEARCH_PATHS'] = '\ \/nanopb'
      end
    end
  end
end
